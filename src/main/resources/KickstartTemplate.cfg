install
text
url --url=${proj.packages.url}
lang ${proj.lang}
keyboard ${proj.keyboard}

<%=
  def list = [];
  for (dev in proj.networking.devices) {
    list << "network --onboot ${dev.onboot ? 'yes' : 'no'} --device ${dev.name} ${!dev.ipv6 ? '--noipv6' : ''} --activate"
  };
  return list.join("\n");
%>

rootpw  --iscrypted ${proj.rootpw}
firewall --service=ssh
timezone --utc ${proj.timezone}
authconfig --enableshadow --passalgo=sha512
selinux --disabled
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
zerombr

<%=
    def str = "";
    if (proj.partitioning.clear) {
        str += "clearpart --all ";
    };
    if (proj.partitioning.init) {
        str += " --initlabel";
    };
    return str;
%>

<%=
    def list = [];
    for (part in proj.partitioning.details) {
        def str = "part $part.mntpoint";
        if (part.fstype) {
            str += " --fstype $part.fstype";
        };
        if (part.size) {
            str += " --size $part.size";
        };
        if (part.grow) {
            str += " --grow";
        };
        if (part.recommended) {
            str += " --recommended";
        };
        list << str
    };
    return list.join("\n");
%>

<%=
    def list = [];
    for (repo in proj.packages.repositories) {
        list << "repo --name=\"$repo.name\" --baseurl=$repo.url --cost=100";
    };
    return list.join("\n");
%>

reboot --eject
firstboot --disable

%packages
<%=
    def list = [];
    for (pkg in proj.packages.details) {
        list << (pkg.isGroup ? "@$pkg.name" : "$pkg.name")
    };
    return list.join("\n");
%>
%end

%post
${proj.postInstall}
%end